# back.test
#
# This exercises the SubsonicInBC that forms the upstream boundary for
# the simulation of the Back et al. nozzle.
#
# PJ, 03-Mar-2014
#     2015-10-22 ported to Eilmer4
#     2015-10-27 relax tolerance to accommodate the less steady mass-flux solution.
#     2019-05-07 relax further to accommodate the different reconstruction
#     associated with the WallBC_WithSlip1 boundary condition.
#     We are sampling the exit flow in the most sensitive region, near the axis.

package require tcltest 2.0
namespace import ::tcltest::*
configure -verbose {start body error}

test prepare-gas-model {Prepare gas model.} -body {
    exec prep-gas ideal-air.inp ideal-air-gas-model.lua > LOGFILE_PREP_GAS
} -result {} -returnCodes {0}

test run-preprocessor {Run the preprocessing stage.} -body {
    exec e4shared --prep --job=back > LOGFILE_PREP
} -result {} -returnCodes {0}

test run-simulation {Run the parallel simulation code.} -body {
    exec e4shared --run --job=back --verbosity=1 --max-cpus=2 > LOGFILE_MAIN
} -result {} -returnCodes {0}

test number-of-steps {Iteration of the final block in a certain number of steps.} -body {
    set fp [open LOGFILE_MAIN r]
    set contents [read $fp]
    close $fp
    set final_steps 0
    foreach line [split $contents "\n"] {
	if {[string first "final-t=" $line] >= 0} {
	    set final_steps [lindex [split $line] 1]
	}
    }
    expr abs($final_steps - 5400) < 100
} -result {1}

test subsonic-region {Subsonic region should have a small positive Mach number.} -body {
    # The following values were extracted from the solution
    # as it was computed on PJ's computer 03-Mar-2014.
    set rho_ref 5.743503e+00
    set p_ref 4.927381e+05
    set T_ref 2.988554e+02
    set Mach_ref 1.384033e-01
    # Probe the solution near the centreline of the upstream boundary
    # and pull a few values from the line of data that is produced by e3post.
    if { [catch {exec e4shared --post --job=back --tindx-plot=last --add-vars="mach" --probe=-0.075,0.0,0.0 } results] } {
        puts "postprocessing probe command failed"
        puts $results
	set rho 0
	set p 0
	set T 0
	set Mach 0
    } else {
	# Skip through the output, looking for the interesting data.
	# There will be a header line, followed by the actual data values.
	set found 0
	foreach line [split $results "\n"] {
	    if {[string first "pos.x" $line] >= 0} {
		set found 1
		continue; # skip to following line
	    }
	    if {$found} {
		set tokens [split [string trim $line]]
		# puts "tokens= $tokens"
		set rho [lindex $tokens 4]; # remember that index starts at 0
		set p [lindex $tokens 8]
		set T [lindex $tokens 19]
		set Mach [lindex $tokens 20]
		break; # We have our data so stop looking.
	    }
	}
	# puts "rho=$rho p=$p T=$T Mach=$Mach"
    }
    # The differences with respect to the reference values should be small. 
    list [expr abs($rho - $rho_ref)/$rho_ref < 1.0e-2] \
    	 [expr abs($p - $p_ref)/$p_ref < 1.0e-2] \
    	 [expr abs($T - $T_ref)/$T_ref < 1.0e-2] \
    	 [expr abs($Mach - $Mach_ref)/$Mach_ref < 1.0e-2]
} -result {1 1 1 1}

test supersonic-region {Supersonic exit should be a bit over Mach 3.} -body {
    # The following values were extracted from the solution
    # as it was computed on PJ's computer 03-Mar-2014.
    set rho_ref 3.904117e-01
    set p_ref 1.142634e+04
    set T_ref 1.019545e+02
    set Mach_ref 3.116296e+00
    # Probe the solution near the centre of the nozzle exit
    # and pull a few values from the line of data that is produced by e3post.
    if { [catch {exec e4shared --post --job=back --tindx-plot=last --add-vars="mach" --probe=0.075,0.0,0.0 } results] } {
        puts "postprocessing probe command failed"
        puts $results
	set rho 0
	set p 0
	set T 0
	set Mach 0
    } else {
	# Skip through the output, looking for the interesting data.
	# There will be a header line, followed by the actual data values.
	set found 0
	foreach line [split $results "\n"] {
	    if {[string first "pos.x" $line] >= 0} {
		set found 1
		continue; # skip to following line
	    }
	    if {$found} {
		set tokens [split [string trim $line]]
		# puts "tokens= $tokens"
		set rho [lindex $tokens 4]; # remember that index starts at 0
		set p [lindex $tokens 8]
		set T [lindex $tokens 19]
		set Mach [lindex $tokens 20]
		break; # We have our data so stop looking.
	    }
	}
	# puts "rho=$rho p=$p T=$T Mach=$Mach"
    }
    # The differences with respect to the reference values should be small. 
    list [expr abs($rho - $rho_ref)/$rho_ref < 5.0e-2] \
    	 [expr abs($p - $p_ref)/$p_ref < 5.0e-2] \
    	 [expr abs($T - $T_ref)/$T_ref < 2.0e-2] \
    	 [expr abs($Mach - $Mach_ref)/$Mach_ref < 2.0e-2]
} -result {1 1 1 1}

cleanupTests
